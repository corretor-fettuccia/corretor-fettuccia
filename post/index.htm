<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formatador de Postagens para Im√≥veis</title>
    <style>
        .result-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        .result-actions button {
            flex: 1;
        }
        #compartilharWhatsApp {
            background-color: #25D366;
        }
        #compartilharWhatsApp:hover {
            background-color: #128C7E;
        }
        #baixarTexto {
            background-color: #2196F3;
        }
        #baixarTexto:hover {
            background-color: #0b7dda;
        }
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"], input[type="number"], select, textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        /* Container principal */
.input-tags-container {
  position: relative;
  margin: 1rem 0;
  font-family: 'Segoe UI', Roboto, sans-serif;
  max-width: 600px;
}

/* Label */
.input-tags-container label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: #333;
  font-size: 0.9rem;
}

/* Input principal */
.input-tags-container input[list] {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.95rem;
  border: 1px solid #ddd;
  border-radius: 6px;
  background-color: #fff;
  box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  transition: all 0.3s ease;
}

/* Efeito quando o input est√° em foco */
.input-tags-container input[list]:focus {
  border-color: #4a90e2;
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
  outline: none;
}

/* Dropdown (datalist) */
.input-tags-container datalist {
  position: absolute;
  width: 100%;
  max-height: 250px;
  overflow-y: auto;
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 0 0 6px 6px;
  border-top: none;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  z-index: 100;
  margin-top: -1px;
}

/* Op√ß√µes do dropdown */
.input-tags-container option {
  padding: 0.75rem 1rem;
  cursor: pointer;
  color: #333;
  border-bottom: 1px solid #f0f0f0;
  transition: background 0.2s;
}

/* Efeito hover nas op√ß√µes */
.input-tags-container option:hover {
  background-color: #f8f9fa;
}

/* Seta indicadora (pseudo-elemento) */
.input-tags-container::after {
  content: "‚ñº";
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.7rem;
  color: #666;
  pointer-events: none;
}

/* Estilo quando o dropdown est√° ativo */
.input-tags-container:focus-within::after {
  transform: translateY(-50%) rotate(180deg);
}

/* Responsividade */
@media (max-width: 768px) {
  .input-tags-container {
    max-width: 100%;
  }
  
  .input-tags-container input[list] {
    padding: 0.65rem 0.9rem;
  }
}
        .checkbox-group {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
        }
        .checkbox-item {
            display: flex;
            align-items: center;
        }
        .checkbox-item input {
            margin-right: 5px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }
        button:hover {
            background-color: #45a049;
        }
        #resultado {
            margin-top: 20px;
            padding: 15px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 4px;
            white-space: pre-line;
        }
        .section {
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        .section-title {
            font-size: 18px;
            color: #333;
            margin-bottom: 10px;
        }
        .custom-item {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        .custom-item input {
            flex: 1;
        }
        #customItemsContainer {
            margin-top: 10px;
        }
        .emoji-picker {
            margin-top: 10px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            max-height: 200px;
            overflow-y: auto;
        }
        .emoji-category {
            margin-bottom: 10px;
        }
        .category-title {
            font-weight: bold;
            margin-bottom: 5px;
            color: #555;
        }
        .emoji-list {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }
        .emoji-option {
            cursor: pointer;
            font-size: 20px;
            padding: 5px;
            border-radius: 4px;
        }
        .emoji-option:hover {
            background-color: #f0f0f0;
        }
        #emojiSearch {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .valor-input {
            position: relative;
        }
        .valor-input:before {
            content: "üí∞";
            position: absolute;
            left: 10px;
            top: 10px;
            font-size: 18px;
        }
        .valor-input input {
            padding-left: 35px;
        }
        .import-export-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        .import-export-buttons button {
            flex: 1;
        }
        #fileInput {
            display: none;
        }
        /* Estilo para os itens personalizados com bot√£o de remo√ß√£o */
        .custom-item-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 5px;
        }
        .custom-item-content {
            display: flex;
            align-items: center;
            flex-grow: 1;
        }
        .remove-custom-item {
            background-color: #f44336;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            margin-left: 10px;
            cursor: pointer;
        }
        .remove-custom-item:hover {
            background-color: #d32f2f;
        }
        /* Estilo para o campo de andar (inicialmente oculto) */
        #andarContainer {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Formatador de Postagens para Im√≥veis</h1>
        
        <div class="import-export-buttons">
            <button id="exportButton">Exportar Dados</button>
            <button id="importButton">Importar Dados</button>
            <input type="file" id="fileInput" accept=".json">
        </div>
        
        <div class="section">
            <div class="section-title">Informa√ß√µes B√°sicas</div>
            <div class="form-group">
                <label for="tipoImovel">Tipo do Im√≥vel</label>
                <select id="tipoImovel">
                    <option value="Casa">üè° Casa</option>
                    <option value="Apartamento">üè¢ Apartamento</option>
                    <option value="Terreno">üìå Terreno</option>
                    <option value="Loja comercial">üè™ Loja comercial</option>
                </select>
            </div>
            
            <div class="form-group">
                <label for="titulo">T√≠tulo da Postagem</label>
                <input type="text" id="titulo" placeholder="Ex: Oportunidade em Mathias ‚Äì Casa dos Sonhos!">
            </div>
            
            <div class="form-group">
                <label for="localizacao">Localiza√ß√£o</label>
                <input type="text" id="localizacao" placeholder="Ex: Rua Encantado, 999">
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">Caracter√≠sticas</div>
            <div class="form-group" id="andarContainer">
                <label for="andar">N√∫mero do Andar</label>
                <input type="number" id="andar" min="0" value="0">
            </div>
            
            <div class="form-group">
                <label for="dormitorios">Dormit√≥rios</label>
                <input type="number" id="dormitorios" min="0" value="0">
            </div>
            
            <div class="form-group">
                <label for="banheiros">Banheiros</label>
                <input type="number" id="banheiros" min="0" value="0">
            </div>
            
            <div class="form-group">
                <label for="vagas">Vagas de Estacionamento</label>
                <input type="number" id="vagas" min="0" value="0">
            </div>
            
            <div class="form-group">
                <label for="area">√Årea Privativa (m¬≤)</label>
                <input type="text" id="area" placeholder="Ex: 120">
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">Itens do Im√≥vel</div>
            <div class="checkbox-group">
            <div class="checkbox-item">
                    <input type="checkbox" id="academia">
                    <label for="elevador">üèãÔ∏è Academia</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="walk">
                    <label for="walk">üèÉ √Årea de caminhada</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="aguaqente">
                    <label for="aguaquente">üî• Agua Quente</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="TomadaCarro">
                    <label for="TomadaCarro">üöò Tomada Carro El√©trico</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="lareira">
                    <label for="lareira">üî• Lareira</label>
                </div>
                
                 <div class="checkbox-item">
                    <input type="checkbox" id="suite">
                    <label for="suite">üõÇ Porteiro</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="elevador">
                    <label for="elevador">üõó Elevador</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="painelSolar">
                    <label for="painelSolar">‚òÄÔ∏è Painel solar</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="porteiro2">
                    <label for="porteiro2">üõÇ Porteiro 24H</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="closet">
                    <label for="closet">üë† Closet</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="work">
                    <label for="work">üëî Escrit√≥rio</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="Smobiliado">
                    <label for="Smobiliado">ü™ë Semi-Mobiliado</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="piscina">
                    <label for="piscina">üèä Piscina</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="churrasqueira">
                    <label for="churrasqueira">üî• Churrasqueira</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="mobiliado">
                    <label for="mobiliado">ü™ë Mobiliado</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="Pisoaquecido">
                    <label for="Pisoaquecido">üå°Ô∏è Piso Aquecido</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="piscinaH">
                    <label for="piscinaH">üèä Piscina Aquecida</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="salaoFestas">
                    <label for="salaoFestas">üéâ Sal√£o de festas</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="patio">
                    <label for="patio">üå≥ P√°tio</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="sacada">
                    <label for="sacada">ü™ü Sacada</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="adega">
                    <label for="adega">üçæ Adega</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="Banheira">
                    <label for="Banheira">üõÅ Banheira</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="gourmet">
                    <label for="gourmet">üçΩÔ∏è Area Gourmet</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="office">
                    <label for="office">üëî Espa√ßo Office</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="arCondicionado">
                    <label for="arCondicionado">‚ùÑÔ∏è Ar condicionado</label>
                </div>
        <div class="checkbox-item">
                    <input type="checkbox" id="bicicletario">
                    <label for="bicicletario">üö≤ Biciclet√°rio</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="games">
                    <label for="games">üèì Sala de Jogos</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="playground">
                    <label for="playground">üõù Playground</label>
                </div>
                
                <div class="checkbox-item">
                    <input type="checkbox" id="QEsporte">
                    <label for="QEsporte">‚öΩ Quadra Esporte</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="pista">
                    <label for="pista">üèÉ Pista de passeio</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="tenis">
                    <label for="tenis">üéæ Quadra de Tenis</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="kids">
                    <label for="kids">üë∂ Area Kids</label>
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" id="teen">
                    <label for="teen">üë∂ Area teen</label>
                </div>
            </div>
            
            <div class="form-group">
                <label>Adicionar Item Personalizado</label>
                <div class="custom-item">
                    <input type="text" id="customEmoji" placeholder="Clique para selecionar emoji" readonly onclick="showEmojiPicker()">
                    <input type="text" id="customItem" placeholder="Descri√ß√£o do item">
                    <button onclick="addCustomItem()">+</button>
                </div>
                
                <div id="emojiPicker" class="emoji-picker" style="display: none;">
                    <input type="text" id="emojiSearch" placeholder="Pesquisar emoji..." oninput="filterEmojis()">
                    <div id="emojiCategoriesContainer"></div>
                </div>
                
                <div id="customItemsContainer"></div>
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">Informa√ß√µes Adicionais</div>
            <div class="form-group">
                <label for="negociacao">Tipo de Negocia√ß√£o</label>
                <input type="text" id="negociacao" placeholder="Ex: Negocia√ß√£o direta com o propriet√°rio!">
            </div>
            
            <div class="form-group valor-input">
                <label for="valor">Valor do Im√≥vel</label>
                <input type="text" id="valor" placeholder="Digite apenas n√∫meros (ex: 350000)">
            </div>
            
            <div class="form-group">
                <label for="publicoAlvo">Para quem √©...</label>
                <textarea id="publicoAlvo" rows="2" placeholder="Ex: Ideal para fam√≠lias que buscam conforto e seguran√ßa"></textarea>
            </div>
            
            <div class="form-group">
                <label for="observacao">Observa√ß√£o</label>
                <textarea id="observacao" rows="3" placeholder="Ex: Essa casa √© ideal para quem busca conforto, espa√ßo e praticidade..."></textarea>
            </div>
            
            <div class="form-group">
                <label for="chamada">Chamada para A√ß√£o</label>
                <input type="text" id="chamada" placeholder="Ex: Entre em contato e agende uma visita!">
            </div>
            
            <div class="form-group">
                <label for="tags">Tags (separadas por v√≠rgula)</label>
                <input list="tagss" id="tags" placeholder="Ex: #CasaAVenda, #Im√≥velMathias, #Oportunidade" style="width: 100%;">
            	<datalist id="tagss">
            	<option value="#minhacasaminhavida #mcmv #compreagora #grandeportoalegre #canoas-rs #esteio-rs #portoalegre #canoasmilgrau #novasantarita #novasantaritamiugrau #corretorfettuccia">
            	  <option value="#ImoveisPopularesRS #sementrada #CasasAcessiveisRS #MoradiaPopularRS #FinanciamentoImovelRS #MinhaCasaMinhaVidaRS #ApartamentoBaratoPOA #ImoveisEconomicosRS #CasaPropriaRS #ImovelPopularPOA #MoradiaBemLocalizadaRS #corretorfettuccia">
            	  <option value="#ConstrucaoRS #EngenhariaGaucha #ObrasNoRS #ReformasRS #ArquitetoRS #PlantasDeCasasRS #MateriaisDeConstrucaoRS #ConstrucaoCivilRS #ConstrutorasRS #ProjetosResidenciaisRS">
<option value="#TerrenosRS #LoteamentosRS #ComprarTerrenoRS #TerrenosBaratosRS #TerrenosNobresRS #TerrenosLitoralRS #TerrenosSerraGaucha #TerrenosUrbanosRS #TerrenosRuraisRS #LoteamentoFeitoRS">
<option value="#InvestimentoImobiliarioRS #FlippingRS #ImoveisParaAlugarRS #RendaPassivaRS #OportunidadesImobiliariasRS #ImoveisDescontadosRS #RetornoFinanceiroRS #InvestirNoRS #CarteiraDeImoveis #LocacaoResidencialRS">
<option value="#ImoveisComerciaisRS #SalaComercialPOA #LojasParaAlugarRS #GalpoesRS #PontosComerciaisRS #EscritoriosRS #ImovelParaNegocioRS #ComercioNoRS #ImovelComercialPOA #SalaoComercialRS">
<option value="#AltoPadraoRS #CasasDeLuxoRS #CondominioExclusivoRS #BairrosNobresPOA #ImoveisPremiumRS #VidaDeLuxoRS #MansoesRS #ApartamentosLuxoPOA #ResidencialPremiumRS #ImoveisExclusivosRS">
 <option value="#ImoveisDeLuxoRS #LuxoNaSerraGaucha #CoberturasPOA #CasasComPiscinaRS #VistaParaOMarRS #DesignDeInterioresRS #EleganciaNoRS #MansoesNaSerra #HighEndRS #LuxuryRealEstateRS">
            	</datalist> 
            
            </div>
        </div>
        
        <button id="gerarPostagem">Gerar Postagem</button>
        
        <div class="form-group">
            <label for="resultado">Postagem Formatada:</label>
            <div id="resultado"></div>
            <div class="result-actions">
                <button id="copiarTexto">Copiar Texto</button>
                <button id="baixarTexto">Baixar como TXT</button>
                <button id="compartilharWhatsApp">Compartilhar no WhatsApp</button>
            </div>
        </div>
    </div>

    <script>
        // Mapeamento de emojis
        const emojiMap = {
            'Casa': 'üè°',
            'Condominio':'üèòÔ∏è',
            'Apartamento': 'üè¢',
            'bicicletario': 'üö≤',
            'Terreno': 'üìå',
            'Loja comercial': 'üè™',
            'dormitorios': 'üõèÔ∏è',
            'banheiros': 'üöø',
            'vagas': 'üöô',
            'gourmet': 'üçΩÔ∏è',
            'TomadaCarro': 'üöò',
            'area': 'üìê',
            'elevador': 'üõó',
            'painelSolar': '‚òÄÔ∏è',
            'porteiro': 'üõÇ',
            'closet': 'üë†',
            'work': 'üëî',
            'office': 'üëî',
            'mobiliado': 'ü™ë',
            'Smobiliado': 'ü™ë',
            'piscina': 'üèä',
            'piscinaH': 'üèä',
            'churrasqueira': 'üî•',
            'Pisoaquecido':'üå°Ô∏è',
            'lareira':'üî•',
            'aguaquente':'üî•',
            'salaoFestas': 'üéâ',
            'porteiro':'üõÇ',
            'porteiro2':'üõÇ',
            'patio': 'üå≥',
            'sacada': 'ü™ü',
            'arCondicionado': '‚ùÑÔ∏è',
            'localizacao': 'üìç',
            'negociacao': 'üí¨',
            'playground':'üõù',
        'adega':'üçæ',
            'chamada': 'üì≤',
            'valor': 'üí∞',
            'games': 'üèì',
            'QEsporte':'‚öΩ',
            'academia':'üèãÔ∏è',
            'walk':'üèÉ',
            'pista':'üèÉ',
            'tenis':'üéæ',
            'kids':'üë∂',
            'teen':'üë∂',
            'andar': 'ü™ú'
        };

        // Emojis organizados por categoria
        const emojiCategories = [
            {
                name: "Tipos de Im√≥vel",
                emojis: ["üè°", "üè¢", "üè†", "üèòÔ∏è", "üèöÔ∏è", "üèóÔ∏è", "üè≠", "üè£", "üè§", "üè•"]
            },
            {
                name: "C√¥modos",
                emojis: ["üõèÔ∏è", "ü™ú", "ü™ü", "üöø", "üõÅ", "üöΩ", "üçΩÔ∏è", "üõãÔ∏è", "üì∫", "üë†"]
            },
            {
                name: "Bem estar",
                emojis: ["üî•", "‚òÄÔ∏è", "‚ùÑÔ∏è", "‚õÑ", "üå°Ô∏è", "üßò", "üë•", "üåü", "üèûÔ∏è", "‚öúÔ∏è"]
            },
            {
                name: "√Åreas Externas",
                emojis: ["üå≥", "üåø", "üñºÔ∏è", "üõ°Ô∏è", "üèùÔ∏è", "üå∑", "üèÄ", "üöó", "‚ôø", "üõù"]
            },
            {
                name: "Diversos",
                emojis: ["‚úÖ", "‚≠ê", "‚ú®", "üîπ", "üí∞", "üìå", "üìç", "üìû", "üõ°Ô∏è", "üí¨"]
            },
            {
                name: "Comodidades",
                emojis: ["üõó", "ü•Ç", "‚ö°", "üí°", "üîå", "üìô", "üîë", "üóùÔ∏è", "üîã", "ü™ë"]
            },
            {
                name: "Utilidades",
                emojis: ["ü™£", "üßπ", "ü´ï", "‚ùáÔ∏è", "üõí", "üõçÔ∏è", "üì¶", "üÜó", "üîÅ", "üß∏"]
            },
            {
                name: "Estilo de vida",
                emojis: ["üíÖ", "üèÉ", "üö≤", "‚öì", "‚õµ", "üíØ", "ü•Ç", "üî∏", "üî∂", "üëÅÔ∏è‚Äçüó®Ô∏è"]
            }
        ];

        // Itens personalizados
        let customItems = [];

        // Mostrar/ocultar o campo do andar baseado no tipo de im√≥vel selecionado
        function toggleAndarField() {
            const tipoImovel = document.getElementById('tipoImovel').value;
            const andarContainer = document.getElementById('andarContainer');
            
            if (tipoImovel === 'Apartamento') {
                andarContainer.style.display = 'block';
            } else {
                andarContainer.style.display = 'none';
            }
        }

        // Formatar o texto do andar
        function formatarAndar(andar) {
            if (andar == 0) {
                return 'ü™ú T√©rreo';
            } else if (andar == 1) {
                return 'ü™ú 1¬∫ Andar';
            } else {
                return `ü™ú ${andar}¬∫ Andar`;
            }
        }

        // Mostrar/ocultar o seletor de emojis
        function showEmojiPicker() {
            const picker = document.getElementById('emojiPicker');
            picker.style.display = picker.style.display === 'none' ? 'block' : 'none';
            
            if (picker.style.display === 'block' && !picker.dataset.loaded) {
                loadEmojiCategories();
                picker.dataset.loaded = true;
            }
        }

        // Carregar categorias de emojis
        function loadEmojiCategories() {
            const container = document.getElementById('emojiCategoriesContainer');
            container.innerHTML = '';
            
            emojiCategories.forEach(category => {
                const categoryDiv = document.createElement('div');
                categoryDiv.className = 'emoji-category';
                
                const title = document.createElement('div');
                title.className = 'category-title';
                title.textContent = category.name;
                
                const emojiList = document.createElement('div');
                emojiList.className = 'emoji-list';
                
                category.emojis.forEach(emoji => {
                    const emojiOption = document.createElement('span');
                    emojiOption.className = 'emoji-option';
                    emojiOption.textContent = emoji;
                    emojiOption.onclick = () => {
                        document.getElementById('customEmoji').value = emoji;
                        document.getElementById('emojiPicker').style.display = 'none';
                    };
                    emojiList.appendChild(emojiOption);
                });
                
                categoryDiv.appendChild(title);
                categoryDiv.appendChild(emojiList);
                container.appendChild(categoryDiv);
            });
        }

        // Filtrar emojis
        function filterEmojis() {
            const searchTerm = document.getElementById('emojiSearch').value.toLowerCase();
            const allEmojis = document.querySelectorAll('.emoji-option');
            
            allEmojis.forEach(emoji => {
                const emojiText = emoji.textContent;
                if (!searchTerm || emojiText.toLowerCase().includes(searchTerm)) {
                    emoji.style.display = 'inline-block';
                } else {
                    emoji.style.display = 'none';
                }
            });
        }

        // Adicionar item personalizado
        function addCustomItem() {
            const emoji = document.getElementById('customEmoji').value;
            const descricao = document.getElementById('customItem').value;
            
            if (emoji && descricao) {
                customItems.push({ emoji, descricao });
                updateCustomItemsDisplay();
                document.getElementById('customEmoji').value = '';
                document.getElementById('customItem').value = '';
            }
        }

        // Remover item personalizado
        function removeCustomItem(index) {
            customItems.splice(index, 1);
            updateCustomItemsDisplay();
        }

        // Atualizar exibi√ß√£o de itens personalizados
        function updateCustomItemsDisplay() {
            const container = document.getElementById('customItemsContainer');
            container.innerHTML = '';
            
            customItems.forEach((item, index) => {
                const itemContainer = document.createElement('div');
                itemContainer.className = 'custom-item-container';
                
                const itemContent = document.createElement('div');
                itemContent.className = 'custom-item-content';
                itemContent.innerHTML = `
                    <input type="checkbox" id="custom-${index}" checked>
                    <label for="custom-${index}">${item.emoji} ${item.descricao}</label>
                `;
                
                const removeButton = document.createElement('button');
                removeButton.className = 'remove-custom-item';
                removeButton.textContent = 'Remover';
                removeButton.onclick = () => removeCustomItem(index);
                
                itemContainer.appendChild(itemContent);
                itemContainer.appendChild(removeButton);
                container.appendChild(itemContainer);
            });
        }

        // Fun√ß√£o para formatar valor enquanto digita
        function formatarValorInput(input) {
            let value = input.value.replace(/\D/g, '');
            
            if (value.length > 2) {
                value = value.replace(/^0+/, '');
                const reais = value.slice(0, -2) || '0';
                const centavos = value.slice(-2);
                input.value = reais + ',' + centavos;
                
                // Calcular valor por m¬≤ se √°rea estiver preenchida
                const area = parseFloat(document.getElementById('area').value);
                if (area && area > 0) {
                    const valorNumerico = parseFloat(reais + '.' + centavos);
                    const valorM2 = (valorNumerico / area).toFixed(2);
                    document.getElementById('valorPorM2').style.display = 'block';
                    document.getElementById('valorPorM2').textContent = `Valor por m¬≤: R$ ${valorM2.replace('.', ',')}`;
                } else {
                    document.getElementById('valorPorM2').style.display = 'none';
                }
            } else if (value.length > 0) {
                input.value = '0,' + value.padStart(2, '0');
            }
        }

        // Fun√ß√£o para formatar valor em BRL (apenas na gera√ß√£o)
        function formatarValorParaTexto(valor) {
            if (!valor) return 'R$ 0,00';
            
            // Remove tudo que n√£o √© d√≠gito
            let value = valor.replace(/\D/g, '');
            
            // Se estiver vazio, retorna zero
            if (value === '') return 'R$ 0,00';
            
            // Garante que temos pelo menos centavos
            while (value.length < 3) {
                value = '0' + value;
            }
            
            // Separa reais e centavos
            const reais = value.slice(0, -2) || '0';
            const centavos = value.slice(-2);
            
            // Formata os reais com pontos
            let reaisFormatados = '';
            let count = 0;
            
            for (let i = reais.length - 1; i >= 0; i--) {
                reaisFormatados = reais[i] + reaisFormatados;
                count++;
                if (count % 3 === 0 && i !== 0) {
                    reaisFormatados = '.' + reaisFormatados;
                }
            }
            
            return 'R$ ' + reaisFormatados + ',' + centavos;
        }

        // Exportar dados do formul√°rio para JSON
        function exportData() {
            const formData = {
                tipoImovel: document.getElementById('tipoImovel').value,
                titulo: document.getElementById('titulo').value,
                localizacao: document.getElementById('localizacao').value,
                andar: document.getElementById('andar').value,
                dormitorios: document.getElementById('dormitorios').value,
                banheiros: document.getElementById('banheiros').value,
                vagas: document.getElementById('vagas').value,
                area: document.getElementById('area').value,
                valor: document.getElementById('valor').value,
                publicoAlvo: document.getElementById('publicoAlvo').value,
                negociacao: document.getElementById('negociacao').value,
                observacao: document.getElementById('observacao').value,
                chamada: document.getElementById('chamada').value,
                tags: document.getElementById('tags').value,
                checkboxes: {},
                customItems: customItems
            };

            // Salvar estado dos checkboxes
            document.querySelectorAll('.checkbox-group input[type="checkbox"]').forEach(checkbox => {
                formData.checkboxes[checkbox.id] = checkbox.checked;
            });

            // Criar arquivo JSON
            const dataStr = JSON.stringify(formData, null, 2);
            const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);
            
            // Criar link de download
            const exportFileDefaultName = 'postagem-imovel.json';
            const linkElement = document.createElement('a');
            linkElement.setAttribute('href', dataUri);
            linkElement.setAttribute('download', exportFileDefaultName);
            linkElement.click();
        }

        // Importar dados do formul√°rio de um arquivo JSON
        function importData(file) {
            const reader = new FileReader();
            
            reader.onload = function(e) {
                try {
                    const formData = JSON.parse(e.target.result);
                    
                    // Preencher campos b√°sicos
                    document.getElementById('tipoImovel').value = formData.tipoImovel || '';
                    document.getElementById('titulo').value = formData.titulo || '';
                    document.getElementById('localizacao').value = formData.localizacao || '';
                    document.getElementById('andar').value = formData.andar || '0';
                    document.getElementById('dormitorios').value = formData.dormitorios || '0';
                    document.getElementById('banheiros').value = formData.banheiros || '0';
                    document.getElementById('vagas').value = formData.vagas || '0';
                    document.getElementById('area').value = formData.area || '';
                    document.getElementById('valor').value = formData.valor || '';
                    document.getElementById('publicoAlvo').value = formData.publicoAlvo || '';
                    document.getElementById('negociacao').value = formData.negociacao || '';
                    document.getElementById('observacao').value = formData.observacao || '';
                    document.getElementById('chamada').value = formData.chamada || '';
                    document.getElementById('tags').value = formData.tags || '';
                    
                    // Atualizar visibilidade do campo andar
                    toggleAndarField();
                    
                    // Preencher checkboxes
                    if (formData.checkboxes) {
                        for (const id in formData.checkboxes) {
                            const checkbox = document.getElementById(id);
                            if (checkbox) {
                                checkbox.checked = formData.checkboxes[id];
                            }
                        }
                    }
                    
                    // Preencher itens personalizados
                    if (formData.customItems && Array.isArray(formData.customItems)) {
                        customItems = formData.customItems;
                        updateCustomItemsDisplay();
                    }
                    
                    alert('Dados importados com sucesso!');
                } catch (error) {
                    alert('Erro ao importar dados: ' + error.message);
                }
            };
            
            reader.readAsText(file);
        }


        // Gerar a postagem
            document.getElementById('gerarPostagem').addEventListener('click', function() {
            const tipoImovel = document.getElementById('tipoImovel').value;
            const titulo = document.getElementById('titulo').value;
            const localizacao = document.getElementById('localizacao').value;
            const andar = document.getElementById('andar').value;
            const dormitorios = document.getElementById('dormitorios').value;
            const banheiros = document.getElementById('banheiros').value;
            const vagas = document.getElementById('vagas').value;
            const area = document.getElementById('area').value;
            const valor = document.getElementById('valor').value;
            const valorFormatado = formatarValorParaTexto(valor);
            const publicoAlvo = document.getElementById('publicoAlvo').value;
            const negociacao = document.getElementById('negociacao').value;
            const observacao = document.getElementById('observacao').value;
            const chamada = document.getElementById('chamada').value;
            const tags = document.getElementById('tags').value;
            
            // Itens selecionados
            const itensSelecionados = [];
            document.querySelectorAll('.checkbox-group input:checked').forEach(item => {
                if (emojiMap[item.id]) {
                    itensSelecionados.push({
                        emoji: emojiMap[item.id],
                        descricao: item.nextElementSibling.textContent.replace(/^[^\w\s]+/, '').trim()
                    });
                }
            });
            
            // Itens personalizados selecionados
            document.querySelectorAll('#customItemsContainer input:checked').forEach((item, index) => {
                itensSelecionados.push(customItems[index]);
            });
            
            // Gerar texto formatado
            let postagem = `${emojiMap[tipoImovel.split(' ')[0]] || ''} ${titulo}\n\n`;
            
            postagem += `${emojiMap['dormitorios'] || ''} ${dormitorios} Dormit√≥rio${dormitorios > 1 ? 's' : ''} | `;
            postagem += `${emojiMap['banheiros'] || ''} ${banheiros} Banheiro${banheiros > 1 ? 's' : ''}`;
            
            if (vagas > 0) {
                postagem += ` | ${emojiMap['vagas'] || ''} Vaga ${vagas} carro${vagas > 1 ? 's' : ''}`;
            }
            
            // Adicionar andar se for apartamento e estiver preenchido
            if (tipoImovel === 'Apartamento' && andar !== undefined && andar !== '') {
                postagem += ` | ${formatarAndar(andar)}`;
            }
            
            postagem += `\n${emojiMap['localizacao'] || ''} End.: ${localizacao}\n`;
            
            if (valor) {
                postagem += `${emojiMap['valor'] || ''} Valor: ${valorFormatado}\n\n`;
            } else {
                postagem += '\n';
            }
            
            if (area) {
                postagem += `${emojiMap['area'] || ''} √Årea privativa: ${area}m¬≤\n\n`;
            }
            
            if (publicoAlvo) {
                postagem += `Para quem √©:\n${publicoAlvo}\n\n`;
            }
            
            if (itensSelecionados.length > 0) {
                itensSelecionados.forEach(item => {
                    postagem += `${item.emoji} ${item.descricao}\n`;
                });
                postagem += '\n';
            }
            
            if (negociacao) {
                postagem += `${emojiMap['negociacao'] || ''} ${negociacao}\n\n`;
            }
            
            if (observacao) {
                postagem += `${observacao}\n\n`;
            }
            
            if (chamada) {
                postagem += `${emojiMap['chamada'] || ''} ${chamada}\n\n`;
            }
            
            if (tags) {
                postagem += `${tags.split(',').map(tag => tag.trim() ? `${tag.trim()}` : '').join(' ')}`;
            }
            
            document.getElementById('resultado').textContent = postagem;
        });
        
        // Copiar texto
        document.getElementById('copiarTexto').addEventListener('click', function() {
            const resultado = document.getElementById('resultado');
            navigator.clipboard.writeText(resultado.textContent)
                .then(() => alert('Texto copiado com sucesso!'))
                .catch(err => alert('Erro ao copiar texto: ' + err));
        });

        // Baixar como TXT
        document.getElementById('baixarTexto').addEventListener('click', function() {
            const texto = document.getElementById('resultado').textContent;
            const blob = new Blob([texto], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'postagem-imovel.txt';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        });

        // Compartilhar no WhatsApp
        document.getElementById('compartilharWhatsApp').addEventListener('click', function() {
            const texto = encodeURIComponent(document.getElementById('resultado').textContent);
            window.open(`https://wa.me/?text=${texto}`, '_blank');
        });
        
        // Configurar bot√µes de importa√ß√£o/exporta√ß√£o
        document.getElementById('exportButton').addEventListener('click', exportData);
        document.getElementById('importButton').addEventListener('click', function() {
            document.getElementById('fileInput').click();
        });
        document.getElementById('fileInput').addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                importData(e.target.files[0]);
            }
        });

        // Inicializar o campo andar (oculto por padr√£o)
        document.getElementById('andarContainer').style.display = 'none';
        
        // Calcular valor por m¬≤ quando √°rea muda
        function calcularValorPorM2() {
            const valorInput = document.getElementById('valor').value;
            const area = parseFloat(document.getElementById('area').value);
            
            if (valorInput && area && area > 0) {
                const valorNumerico = parseFloat(valorInput.replace(/\D/g, '')) / 100;
                const valorM2 = (valorNumerico / area).toFixed(2);
                document.getElementById('valorPorM2').style.display = 'block';
                document.getElementById('valorPorM2').textContent = `Valor por m¬≤: R$ ${valorM2.replace('.', ',')}`;
            } else {
                document.getElementById('valorPorM2').style.display = 'none';
            }
        }

        // Monitorar mudan√ßas no tipo de im√≥vel
        document.getElementById('tipoImovel').addEventListener('change', toggleAndarField);
    </script>
</body>
</html>
